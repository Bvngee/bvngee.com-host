# http://nginx.org/en/docs/

user nobody nobody;
worker_processes auto;
error_log /dev/stdout;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # If the host server's CPU is powerful enough, turn gzip compression on
    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Redirect all HTTP requests to HTTPS
    server {
        server_name *.bvngee.com bvngee.com;
        listen 80;
        listen [::]:80;

        # We don't use the HTTP-01 ACME challenge anymore! We use DNS-01 instead.
        # location /.well-known/acme-challenge/ {
        #     root /usr/share/nginx/html;
        #     try_files $uri $uri.html $uri/index.html /index.html;
        # }

        return 301 https://$host$request_uri;
    }
    
    # Redirect any unrecognized subdomains to default server (other subdomains specified below)
    server {
        server_name *.bvngee.com;

        listen 443 ssl;
        listen [::]:443 ssl;
    	ssl_certificate /usr/share/nginx/certs/fullchain.pem;
    	ssl_certificate_key /usr/share/nginx/certs/key.pem;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        # if ($host = 'www.bvngee.com') {
        return 301 https://bvngee.com$request_uri;
        # }
    }

    # Default server block (bvngee.com)
    server {
        server_name bvngee.com;                                          
        
        listen 443 default_server ssl;                       
        listen [::]:443 default_server ssl;
        ssl_certificate /usr/share/nginx/certs/fullchain.pem;
        ssl_certificate_key /usr/share/nginx/certs/key.pem;                  
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        
        root /usr/share/nginx/html;                                
        index index.html;                                  

        location / {                                                        
            try_files $uri $uri/index.html $uri.html =404;         
        }                                                    
    }

    # Webhook server (rebuilds static content on each github webhook)
    upstream webhook {
        server webhook:3000;
    }
    server {
        server_name webhook.bvngee.com;

        listen 443 ssl;
        listen [::]:443 ssl;
    	ssl_certificate /usr/share/nginx/certs/fullchain.pem;
    	ssl_certificate_key /usr/share/nginx/certs/key.pem;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        location / {
            proxy_pass http://webhook;
        }
    }

    # Private container registry and web based UI

    # Set a variable to help us decide if we need to add the
    # 'Docker-Distribution-Api-Version' header.
    # The registry always sets this header.
    # In the case of nginx performing auth, the header is unset
    # since nginx is auth-ing before proxying.
    map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
        '' 'registry/2.0';
    }
    upstream registry {
        server registry:5000;
    }
    upstream registry-ui {
        server registry-ui:80;
    }
    server {
        server_name registry.bvngee.com;

        listen 443 ssl;
        listen [::]:443 ssl;
    	ssl_certificate /usr/share/nginx/certs/fullchain.pem;
    	ssl_certificate_key /usr/share/nginx/certs/key.pem;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        # BELOW: See https://distribution.github.io/distribution/recipes/nginx/

        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;
        # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
        chunked_transfer_encoding on;

        location /v2/ {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
              return 404;
            }

            # To add basic authentication to v2 use auth_basic setting.
            auth_basic "Bvngee's private container registry";
            auth_basic_user_file /run/secrets/nginx.htpasswd;

            ## If $docker_distribution_api_version is empty, the header is not added.
            ## See the map directive above where this variable is defined.
            add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

            proxy_pass                          http://registry;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }

        location / {
            proxy_pass http://registry-ui;
        }
    }

    # Enough said
    upstream github-readme-stats {
        server github-readme-stats:9000;
    }
    server {
        server_name github-readme-stats.bvngee.com;

        listen 443 ssl;
        listen [::]:443 ssl;
    	ssl_certificate /usr/share/nginx/certs/fullchain.pem;
    	ssl_certificate_key /usr/share/nginx/certs/key.pem;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        location / {
            proxy_pass http://github-readme-stats;
        }
    }

    # UCSC Formula Slug Telemetry Visualization - backend infra. SSL is handled by it, not us
    server {
        server_name telemetry.formulaslug.com.com;
        listen 80;
        listen [::]:80;
        location / {
            proxy_set_header Host $host;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "Upgrade";
            resolver 127.0.0.11;
            set $target caddy;
            proxy_pass http://$target:80;
        }
    }
    server {
        server_name telemetry.formulaslug.com;
        listen 443 ssl;
        listen [::]:443 ssl;
    	ssl_certificate /usr/share/nginx/certs/fullchain.pem;
    	ssl_certificate_key /usr/share/nginx/certs/key.pem;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        location / { 
            proxy_set_header Host $host;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "Upgrade";
            resolver 127.0.0.11;
            set $target caddy;
            proxy_pass http://$target:80;
        }
    }
    
}

